#!/usr/bin/env bash


# Get the currently staged files
declare -a STAGED_FILES=($(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g'))

# Quit if nothing is staged
[ -z "$STAGED_FILES" ] && exit 0

# Check if eslint is installed
ESLINT_INSTALLED=$(node_modules/.bin/eslint --version &>/dev/null && echo true || echo false)

# Lint staged files with eslint if it is installed in the project
if [ "$ESLINT_INSTALLED" = "true" ]; then
  # Filter the staged files by file extension that we want to lint
  STAGED_FILES_TO_LINT=$((IFS=$'\n' && echo "${STAGED_FILES[*]}") | grep -E '.*\.(js|jsx|tsx|ts)$')

  # Exit if no staged files are lintable
  [ -z "$STAGED_FILES_TO_LINT" ] && exit 0

  echo ""
  echo Running eslint on staged files...
  # Run eslint using the detected package runner
  $(.githooks/eslint.js $STAGED_FILES_TO_LINT --max-warnings 0 --report-unused-disable-directives)

  # Get the eslint exit code
  ESLINT_EXIT="$?"

  # Re-add files since they may have been fixed
  # Uncomment the next line if you are running eslint with the --fix option
  # git add "${LINTABLE_FILES}"

  # Test the eslint exit code for non-zero status
  if [[ "${ESLINT_EXIT}" == 0 ]]; then
    printf "\033[32m✔\033[0m Ok\n"
  else
    printf "\n\033[31mCOMMIT FAILED:\033[0m Fix eslint errors and try again"
    exit $ESLINT_EXIT
  fi
fi

# Check if prettier is installed
PRETTIER_INSTALLED=$(prettier --version &>/dev/null && echo true || echo false)
# Prettify all selected files
if [ "$PRETTIER_INSTALLED" = "true" ]; then
  STAGED_FILES_TO_FORMAT=$((IFS=$'\n' && echo "${STAGED_FILES[*]}") | grep -E '.*\.(js|jsx|tsx|ts|json)$')

echo ""
echo Running prettier on staged files...
  node_modules/.bin/prettier $STAGED_FILES_TO_FORMAT --ignore-unknown --write --loglevel warn
  PRETTIER_EXIT="$?"

  if [[ "${PRETTIER_EXIT}" == 0 ]]; then
    printf "\033[32m✔\033[0m Ok\n"
  else
    printf "\n\033[31mCOMMIT FAILED:\033[0m Fix prettier errors and try again\n"
    exit $PRETTIER_EXIT
  fi

  # Add back the modified/prettified files to staging
  echo "$STAGED_FILES_TO_FORMAT" | xargs git add
fi

exit 0
