{"version":3,"sources":["../../../../packages/eslint-staged-ignored-filter/lib/filter-ignored.ts"],"sourcesContent":["import { isIgnored } from './is-ignored';\n\nexport type FilterIgnoredProps = string | string[];\nexport type IgnoredFilesType = string[];\n\nconst removeEslintIgnoredFiles = async (file: string) =>\n  !(await isIgnored(file)) && file;\n\n/**\n * Takes an array of file paths or a space delimited string of file paths and returns an array\n * of file paths that are not ignored by ESLint\n * @param {FilterIgnoredProps} files - The files to check.\n * @returns {Promise<(string | false)[]>} An promise that resolves to an array of file paths that are not ignored by ESLint\n */\nexport const filterIgnored = async (files: FilterIgnoredProps) => {\n  const filesArray = typeof files === 'string' ? files.split(' ') : files;\n  const ignoredFiles = await Promise.all(\n    filesArray.map(await removeEslintIgnoredFiles)\n  );\n  return await ignoredFiles.filter(Boolean);\n};\n"],"names":["filterIgnored","removeEslintIgnoredFiles","file","isIgnored","files","filesArray","split","ignoredFiles","Promise","all","map","filter","Boolean"],"mappings":"AAAA,2CAcaA,yCAAAA,yCAda,gBAK1B,MAAMC,yBAA2B,MAAOC,MACtC,CAAE,MAAMC,GAAAA,oBAAS,EAACD,OAAUA,KAQvB,MAAMF,cAAgB,MAAOI,OAA8B,CAChE,MAAMC,WAAa,OAAOD,QAAU,SAAWA,MAAME,KAAK,CAAC,KAAOF,KAAK,CACvE,MAAMG,aAAe,MAAMC,QAAQC,GAAG,CACpCJ,WAAWK,GAAG,CAAC,MAAMT,2BAEvB,OAAO,MAAMM,aAAaI,MAAM,CAACC,QACnC"}